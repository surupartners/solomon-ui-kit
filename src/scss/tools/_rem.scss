/**
 * Defines a CSS property in rem with px fallback
 *
 *
 * DISABLED ON 8/12/16 BY MATT CHOLAWO as only really ie8 doesn't support rem.
 * Leave the mixin until uses of it are removed.  It just outputs the style with rem units now.
 *
 * e.g.

   .foo {
       @include rem(margin, 1, 0.5, 2, 0.5);
       @include rem(font-size, 1);
       @include rem(border, 0.25, solid blue, !important);
   }
   .foo {
       margin: 16px 8px 32px 8px;
       margin: 1rem 0.5rem 2rem 0.5rem;
       font-size: 16px;
       font-size: 1rem;
       border: 4px solid blue, !important;
       border: 0.25rem solid blue, !important;
   }

 */
@mixin rem($property, $values...) {
    $max: length($values);
    $suffix: "";
    $px-values: "";
    $rem-values: "";

    @for $i from 1 through $max {
        @if type-of(nth($values, $i)) == "number" {
            $value: strip-unit(nth($values, $i));
            $px-values: #{$px-values + $value*16}px;
        } @else {
            $px-values: #{$px-values + nth($values, $i)};
        }

        @if $i < $max {
            $px-values: #{$px-values + " "};
        }
    }

    @for $i from 1 through $max {
        @if type-of(nth($values, $i)) == "number" {
            $value: strip-unit(nth($values, $i));
            $rem-values: #{$rem-values + $value}rem;
        } @else {
            $rem-values: #{$rem-values + nth($values, $i)};
        }

        @if $i < $max {
            $rem-values: #{$rem-values + ' '};
        }
    }

    // #{$property}: $px-values + $suffix;
    #{$property}: $rem-values + $suffix;
}